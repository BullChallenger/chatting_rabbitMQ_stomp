syntax = "proto3";

package token;

option java_multiple_files = true;
option java_package = "com.example.grpc.chat";
option java_outer_classname = "ChatRoomProto";

service ChatRoomGrpcService {
  rpc CreateChatRoom(ChatRoomRequest) returns (ChatRoomResponse) {} // 채팅방 생성
  rpc EnterChatRoom(ChatRoomIdRequest) returns (ChatRoomResponse) {} // 채팅방 입장
  rpc FindAllByAgentId(AgentIdRequest) returns (ChatRoomListResponse) {} // 중개사가 속한 채팅방
  rpc FindAllByClientId(ClientIdRequest) returns (ChatRoomListResponse) {} // 중개사가 속한 채팅방
  rpc ExitChatRoom(ChatRoomIdRequest) returns (ExitChatRoomResponse) {} // 채팅방 나가기
  rpc IsChatRoomOpened(ChatRoomRequest) returns (ChatRoomValidationResult) {} // 채팅방이 열려있는지 확인
}

message ChatRoomRequest {
  string clientId = 1;
  string agentId = 2;
}

message ChatRoomIdRequest {
  string chatRoomId = 1;
}

message AgentIdRequest {
  string agentId = 1;
}

message ClientIdRequest {
  string clientId = 1;
}

message ChatRoomListResponse {
  repeated ChatRoomInfoResponse chatRooms = 1;
}

message ChatRoomInfoResponse {
  string id = 1;
  string nickname = 2;
  string lastMessage = 3;
  string createdAt = 4;
}

message ChatRoomResponse {
  string id = 1;
  string clientId = 2;
  string agentId = 3;
  repeated ChatMessage chatMessagesInRoom = 4;
}

message ChatRoomValidationResult {
  bool result = 1;
}

message ChatMessage {
  string id = 1;
  string chatRoomId = 2;
  string accountId = 3;
  string nickname = 4;
  string message = 5;
}

message ExitChatRoomResponse {
  string message = 1;
}